# Production Dockerfile - Use with MongoDB Atlas
# Optimized for production deployment with external MongoDB

FROM node:18-alpine AS base
RUN apk add --no-cache libc6-compat curl
WORKDIR /app

# Dependencies
FROM base AS deps
COPY package.json package-lock.json* ./
RUN npm ci

# Build the app
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build with standalone output for optimized production
ENV NODE_ENV="production"
RUN npm run build

# Production image
FROM base AS runner
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy standalone build
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

USER nextjs

EXPOSE 3000

ENV PORT=3000 \
    NODE_ENV="production" \
    HOSTNAME="0.0.0.0"

# Health check with better IPv4/IPv6 handling and curl fallback
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://127.0.0.1:3000/api/health || curl -f http://localhost:3000/api/health || exit 1

CMD ["node", "server.js"]